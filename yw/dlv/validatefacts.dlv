
% FACT: check_type(check_type_id, check_type_name).
check_type(1, 'self check').
check_type(2, 'external check').

% FACT: self_check_type(check_type_id, self_check_tpye_id, self_check_type_name).
self_check_type(1, 1, 'text standard').
self_check_type(1, 2, 'date standard').
self_check_type(1, 3, 'time standard').
self_check_type(1, 4, 'number standard').
self_check_type(1, 5, 'authorship standard').


% FACT: external_check_type(check_type_id, external_check_tpye_id, external_check_type_name).
external_check_type(2, 1, 'local source).
external_check_type(2, 2, 'remote source).

% FACT: source_used(external_check_type_name, source_used_id, source_used_name).
source_used('local source', 1, 'local_authority_source').
source_used('remote source', 2, '_authority_source').


% FACT: matching_method(matching_method_id, matching_method_name).
matching_method(1, 'EXACT'}.
matching_method(2, 'FUZZY'}.


% FACT: match_result(match_result_id, match_result_name).
match_result(1, 'SUCESSFUL').
match_result(2, 'FAILED').

% FACT: final_result(final_result_id, final_result_name).
final_result(1, 'UNABLE to determine the validity').
final_result(2, 'ACCEPTED').

% FACT: field_name(field_name_id, field_name_value).
field_name(1,'catalogNumber').
field_name(2,'scientificName').
field_name(3,'scientificNameAuthorship').
field_name(4,'specificEpithet').
field_name(5,'genus').
field_name(6,'family').
field_name(7,'order').
field_name(8,'class').
field_name(9,'phylum').
field_name(10,'kingdom').
field_name(11,'recordedBy').
field_name(12,'eventDate').
field_name(13,'verbatimEventDate').
field_name(14,'locality').
field_name(15,'stateProvince').
field_name(16,'country').
field_name(17,'higherGeography').





% FACT: log_annotation(annotation_id, source_id, line_number, tag, keyword, value)
log_annotation(1, 1, 40, "log", "@log", "{timestamp} Reading input records from {input1_data_file_name}").
log_annotation(2, 1, 114, "log", "@log", "{timestamp} Reading input record {original_catalogNumber}").
log_annotation(3, 1, 134, "log", "@log", "{timestamp} Trying {check_type} {source_used} {matching_method} match for {field_name}: {original_scientificName}").
log_annotation(4, 1, 141, "log", "@log", "{timestamp} {matching_method} match was {MATCHING_RESULT}").
log_annotation(5, 1, 149, "log", "@log", "{timestamp} {matching_method} match was {MATCHING_RESULT}").
log_annotation(6, 1, 150, "log", "@log", "{timestamp} Trying {check_type} {source_used} {matching_method} match for {field_name}: {original_scientificName}").
log_annotation(7, 1, 157, "log", "@log", "{timestamp} {matching_method} match was {MATCHING_RESULT}").
log_annotation(8, 1, 162, "log", "@log", "{timestamp} {matching_method} match was {MATCHING_RESULT}").
log_annotation(9, 1, 173, "log", "@log", "{timestamp} {final_result} record {original_catalogNumber}").
log_annotation(10, 1, 222, "log", "@log", "{timestamp} UPDATING {field_name} from {original_scientificName} to {updated_scientificName}").
log_annotation(11, 1, 230, "log", "@log", "{timestamp} UPDATING {field_name} from {original_authorship} to {updated_authorship}").
log_annotation(12, 1, 247, "log", "@log", "{timestamp} {final_result} the record {original_catalogNumber}").
log_annotation(13, 1, 272, "log", "@log", "{timestamp} Wrote {accepted_record_count} {final_result} records to {output1_data_file_name}").
log_annotation(14, 1, 273, "log", "@log", "{timestamp} Wrote {accepted_record_count} {final_result} records to {output1_data_file_name}").





