
% FACT: program(program_id, program_name, qualified_program_name, begin_annotation_id, end_annotation_id).
program(1, 'clean_name_date_log', 'clean_name_date_log', 1, 94).
program(2, 'name_val', 'clean_name_date_log.name_val', 12, 69).
program(3, 'read_records_from_localDB', 'clean_name_date_log.name_val.read_records_from_localDB', 21, 26).
program(4, 'read_input1_data_records', 'clean_name_date_log.name_val.read_input1_data_records', 27, 33).
program(5, 'extract_scientificName_and_authorship', 'clean_name_date_log.name_val.extract_scientificName_and_authorship', 34, 38).
program(6, 'find_matching_localDB_record', 'clean_name_date_log.name_val.find_matching_localDB_record', 39, 44).
program(7, 'update_scientificName', 'clean_name_date_log.name_val.update_scientificName', 45, 49).
program(8, 'update_authorship', 'clean_name_date_log.name_val.update_authorship', 50, 54).
program(9, 'compose_output1_record', 'clean_name_date_log.name_val.compose_output1_record', 55, 59).
program(10, 'write_output_data', 'clean_name_date_log.name_val.write_output_data', 60, 68).
program(11, 'date_val', 'clean_name_date_log.date_val', 70, 93).
program(12, 'read2_input_data_records', 'clean_name_date_log.date_val.read2_input_data_records', 77, 81).
program(13, 'extract_eventDate', 'clean_name_date_log.date_val.extract_eventDate', 82, 85).
program(14, 'clean_eventDate', 'clean_name_date_log.date_val.clean_eventDate', 86, 92).
program(15, 'exactmatch', 'exactmatch', 95, 100).
program(16, 'fuzzymatch', 'fuzzymatch', 101, 105).
program(17, 'timestamp', 'timestamp', 106, 109).

% FACT: workflow(program_id).
workflow(1).
workflow(2).
workflow(11).

% FACT: function(program_id).
function(15).
function(16).
function(17).

% FACT: has_subprogram(program_id, subprogram_id).
has_subprogram(1, 2).
has_subprogram(2, 3).
has_subprogram(2, 4).
has_subprogram(2, 5).
has_subprogram(2, 6).
has_subprogram(2, 7).
has_subprogram(2, 8).
has_subprogram(2, 9).
has_subprogram(2, 10).
has_subprogram(1, 11).
has_subprogram(11, 12).
has_subprogram(11, 13).
has_subprogram(11, 14).

% FACT: port(port_id, port_type, port_name, qualified_port_name, port_annotation_id, data_id).
port(1, 'in', 'input1_data', 'clean_name_date_log<-input1_data', 2, 1).
port(2, 'in', 'localDB_data', 'clean_name_date_log<-localDB_data', 4, 2).
port(3, 'out', 'log1_data', 'clean_name_date_log->log1_data', 6, 3).
port(4, 'out', 'output2_data', 'clean_name_date_log->output2_data', 8, 4).
port(5, 'out', 'log2_data', 'clean_name_date_log->log2_data', 10, 5).
port(6, 'in', 'localDB_data', 'clean_name_date_log.name_val<-localDB_data', 13, 6).
port(7, 'in', 'input1_data', 'clean_name_date_log.name_val<-input1_data', 15, 7).
port(8, 'out', 'output1_data', 'clean_name_date_log.name_val->output1_data', 17, 8).
port(9, 'out', 'log1_data', 'clean_name_date_log.name_val->log1_data', 19, 9).
port(10, 'in', 'localDB_data', 'clean_name_date_log.name_val.read_records_from_localDB<-localDB_data', 22, 10).
port(11, 'out', 'localDB_scientificName_lst', 'clean_name_date_log.name_val.read_records_from_localDB->localDB_scientificName_lst', 25, 11).
port(12, 'in', 'input1_data', 'clean_name_date_log.name_val.read_input1_data_records<-input1_data', 28, 12).
port(13, 'out', 'original1_record', 'clean_name_date_log.name_val.read_input1_data_records->original1_record', 30, 13).
port(14, 'out', 'record_num', 'clean_name_date_log.name_val.read_input1_data_records->record_num', 31, 14).
port(15, 'in', 'original1_record', 'clean_name_date_log.name_val.extract_scientificName_and_authorship<-original1_record', 35, 13).
port(16, 'out', 'original_scientificName', 'clean_name_date_log.name_val.extract_scientificName_and_authorship->original_scientificName', 36, 15).
port(17, 'out', 'original_authorship', 'clean_name_date_log.name_val.extract_scientificName_and_authorship->original_authorship', 37, 16).
port(18, 'in', 'original_scientificName', 'clean_name_date_log.name_val.find_matching_localDB_record<-original_scientificName', 40, 15).
port(19, 'in', 'localDB_scientificName_lst', 'clean_name_date_log.name_val.find_matching_localDB_record<-localDB_scientificName_lst', 41, 11).
port(20, 'OUT', 'matching_localDB_record', 'clean_name_date_log.name_val.find_matching_localDB_record->matching_localDB_record', 43, 17).
port(21, 'in', 'original_scientificName', 'clean_name_date_log.name_val.update_scientificName<-original_scientificName', 46, 15).
port(22, 'in', 'matching_localDB_record', 'clean_name_date_log.name_val.update_scientificName<-matching_localDB_record', 47, 17).
port(23, 'out', 'updated_scientificName', 'clean_name_date_log.name_val.update_scientificName->updated_scientificName', 48, 18).
port(24, 'in', 'matching_localDB_record', 'clean_name_date_log.name_val.update_authorship<-matching_localDB_record', 51, 17).
port(25, 'in', 'original_authorship', 'clean_name_date_log.name_val.update_authorship<-original_authorship', 52, 16).
port(26, 'out', 'updated_authorship', 'clean_name_date_log.name_val.update_authorship->updated_authorship', 53, 19).
port(27, 'in', 'updated_scientificName', 'clean_name_date_log.name_val.compose_output1_record<-updated_scientificName', 56, 18).
port(28, 'in', 'updated_authorship', 'clean_name_date_log.name_val.compose_output1_record<-updated_authorship', 57, 19).
port(29, 'out', 'output1_record', 'clean_name_date_log.name_val.compose_output1_record->output1_record', 58, 20).
port(30, 'in', 'output1_record', 'clean_name_date_log.name_val.write_output_data<-output1_record', 61, 20).
port(31, 'in', 'record_num', 'clean_name_date_log.name_val.write_output_data<-record_num', 62, 14).
port(32, 'out', 'output1_data', 'clean_name_date_log.name_val.write_output_data->output1_data', 64, 21).
port(33, 'out', 'log1_data', 'clean_name_date_log.name_val.write_output_data->log1_data', 66, 22).
port(34, 'in', 'output1_data', 'clean_name_date_log.date_val<-output1_data', 71, 8).
port(35, 'out', 'output2_data', 'clean_name_date_log.date_val->output2_data', 73, 23).
port(36, 'out', 'log2_data', 'clean_name_date_log.date_val->log2_data', 75, 24).
port(37, 'in', 'input2_data', 'clean_name_date_log.date_val.read2_input_data_records<-input2_data', 78, 25).
port(38, 'out', 'original2_record', 'clean_name_date_log.date_val.read2_input_data_records->original2_record', 80, 26).
port(39, 'in', 'original2_record', 'clean_name_date_log.date_val.extract_eventDate<-original2_record', 83, 26).
port(40, 'out', 'original2_eventDate', 'clean_name_date_log.date_val.extract_eventDate->original2_eventDate', 84, 27).
port(41, 'in', 'original2_eventDate', 'clean_name_date_log.date_val.clean_eventDate<-original2_eventDate', 87, 27).
port(42, 'out', 'log2_data', 'clean_name_date_log.date_val.clean_eventDate->log2_data', 88, 28).
port(43, 'out', 'output2_data', 'clean_name_date_log.date_val.clean_eventDate->output2_data', 90, 29).
port(44, 'param', 'lst', 'exactmatch<-lst', 96, 30).
port(45, 'param', 'label_str', 'exactmatch<-label_str', 97, 31).
port(48, 'param', 'lst', 'fuzzymatch<-lst', 102, 30).
port(49, 'param', 'label_str', 'fuzzymatch<-label_str', 103, 31).
port(51, 'param', 'message', 'timestamp<-message', 107, 35).

% FACT: port_alias(port_id, alias).
port_alias(14, 'record_id').
port_alias(31, 'record_id').

% FACT: port_uri_template(port_id, uri).
port_uri_template(1, 'file:{input1_data_file_name}').
port_uri_template(2, '{localDB_data_file_name}').
port_uri_template(3, 'file:{log1_data_file_name}').
port_uri_template(4, 'file:{output2_data_file_name}').
port_uri_template(5, 'file:{log2_data_file_name}').
port_uri_template(6, '{localDB_data_file_name}').
port_uri_template(7, 'file:{input1_data_file_name}').
port_uri_template(8, 'file:{output1_data_file_name}').
port_uri_template(9, 'file:{log1_data_file_name}').
port_uri_template(10, '{localDB_data_file_name}').
port_uri_template(12, 'file:{input1_data_file_name}').
port_uri_template(32, 'file:{output1_data_file_name}').
port_uri_template(33, 'file:{log1_data_file_name}').
port_uri_template(34, 'file:{output1_data_file_name}').
port_uri_template(35, 'file:{output2_data_file_name}').
port_uri_template(36, 'file:{log2_data_file_name}').
port_uri_template(37, 'file:{output1_data_file_name}').
port_uri_template(42, 'file:{log2_data_file_name}').
port_uri_template(43, 'file:{output2_data_file_name}').

% FACT: has_in_port(block_id, port_id).
has_in_port(1, 1).
has_in_port(1, 2).
has_in_port(2, 6).
has_in_port(2, 7).
has_in_port(3, 10).
has_in_port(4, 12).
has_in_port(5, 15).
has_in_port(6, 18).
has_in_port(6, 19).
has_in_port(7, 21).
has_in_port(7, 22).
has_in_port(8, 24).
has_in_port(8, 25).
has_in_port(9, 27).
has_in_port(9, 28).
has_in_port(10, 30).
has_in_port(10, 31).
has_in_port(11, 34).
has_in_port(12, 37).
has_in_port(13, 39).
has_in_port(14, 41).
has_in_port(15, 44).
has_in_port(15, 45).
has_in_port(16, 48).
has_in_port(16, 49).
has_in_port(17, 51).

% FACT: has_out_port(block_id, port_id).
has_out_port(1, 3).
has_out_port(1, 4).
has_out_port(1, 5).
has_out_port(2, 8).
has_out_port(2, 9).
has_out_port(3, 11).
has_out_port(4, 13).
has_out_port(4, 14).
has_out_port(5, 16).
has_out_port(5, 17).
has_out_port(6, 20).
has_out_port(7, 23).
has_out_port(8, 26).
has_out_port(9, 29).
has_out_port(10, 32).
has_out_port(10, 33).
has_out_port(11, 35).
has_out_port(11, 36).
has_out_port(12, 38).
has_out_port(13, 40).
has_out_port(14, 42).
has_out_port(14, 43).

% FACT: data(data_id, data_name, qualified_data_name).
data(1, 'input1_data', '[input1_data]').
data(2, 'localDB_data', '[localDB_data]').
data(3, 'log1_data', '[log1_data]').
data(4, 'output2_data', '[output2_data]').
data(5, 'log2_data', '[log2_data]').
data(6, 'localDB_data', 'clean_name_date_log[localDB_data]').
data(7, 'input1_data', 'clean_name_date_log[input1_data]').
data(8, 'output1_data', 'clean_name_date_log[output1_data]').
data(9, 'log1_data', 'clean_name_date_log[log1_data]').
data(23, 'output2_data', 'clean_name_date_log[output2_data]').
data(24, 'log2_data', 'clean_name_date_log[log2_data]').
data(10, 'localDB_data', 'clean_name_date_log.name_val[localDB_data]').
data(11, 'localDB_scientificName_lst', 'clean_name_date_log.name_val[localDB_scientificName_lst]').
data(12, 'input1_data', 'clean_name_date_log.name_val[input1_data]').
data(13, 'original1_record', 'clean_name_date_log.name_val[original1_record]').
data(14, 'record_id', 'clean_name_date_log.name_val[record_id]').
data(15, 'original_scientificName', 'clean_name_date_log.name_val[original_scientificName]').
data(16, 'original_authorship', 'clean_name_date_log.name_val[original_authorship]').
data(17, 'matching_localDB_record', 'clean_name_date_log.name_val[matching_localDB_record]').
data(18, 'updated_scientificName', 'clean_name_date_log.name_val[updated_scientificName]').
data(19, 'updated_authorship', 'clean_name_date_log.name_val[updated_authorship]').
data(20, 'output1_record', 'clean_name_date_log.name_val[output1_record]').
data(21, 'output1_data', 'clean_name_date_log.name_val[output1_data]').
data(22, 'log1_data', 'clean_name_date_log.name_val[log1_data]').
data(25, 'input2_data', 'clean_name_date_log.date_val[input2_data]').
data(26, 'original2_record', 'clean_name_date_log.date_val[original2_record]').
data(27, 'original2_eventDate', 'clean_name_date_log.date_val[original2_eventDate]').
data(28, 'log2_data', 'clean_name_date_log.date_val[log2_data]').
data(29, 'output2_data', 'clean_name_date_log.date_val[output2_data]').

% FACT: channel(channel_id, data_id).
channel(26, 3).
channel(27, 4).
channel(28, 5).
channel(29, 6).
channel(30, 7).
channel(31, 8).
channel(32, 1).
channel(33, 2).
channel(34, 9).
channel(35, 23).
channel(36, 24).
channel(1, 8).
channel(2, 9).
channel(3, 10).
channel(4, 12).
channel(5, 13).
channel(6, 15).
channel(7, 15).
channel(8, 11).
channel(9, 17).
channel(10, 17).
channel(11, 16).
channel(12, 18).
channel(13, 19).
channel(14, 20).
channel(15, 14).
channel(16, 6).
channel(17, 7).
channel(18, 21).
channel(19, 22).
channel(20, 23).
channel(21, 24).
channel(22, 26).
channel(23, 27).
channel(24, 29).
channel(25, 28).

% FACT: port_connects_to_channel(port_id, channel_id).
port_connects_to_channel(9, 26).
port_connects_to_channel(35, 27).
port_connects_to_channel(36, 28).
port_connects_to_channel(6, 29).
port_connects_to_channel(7, 30).
port_connects_to_channel(8, 31).
port_connects_to_channel(34, 31).
port_connects_to_channel(7, 32).
port_connects_to_channel(6, 33).
port_connects_to_channel(9, 34).
port_connects_to_channel(35, 35).
port_connects_to_channel(36, 36).
port_connects_to_channel(32, 1).
port_connects_to_channel(33, 2).
port_connects_to_channel(10, 3).
port_connects_to_channel(12, 4).
port_connects_to_channel(13, 5).
port_connects_to_channel(15, 5).
port_connects_to_channel(16, 6).
port_connects_to_channel(18, 6).
port_connects_to_channel(16, 7).
port_connects_to_channel(21, 7).
port_connects_to_channel(11, 8).
port_connects_to_channel(19, 8).
port_connects_to_channel(20, 9).
port_connects_to_channel(22, 9).
port_connects_to_channel(20, 10).
port_connects_to_channel(24, 10).
port_connects_to_channel(17, 11).
port_connects_to_channel(25, 11).
port_connects_to_channel(23, 12).
port_connects_to_channel(27, 12).
port_connects_to_channel(26, 13).
port_connects_to_channel(28, 13).
port_connects_to_channel(29, 14).
port_connects_to_channel(30, 14).
port_connects_to_channel(14, 15).
port_connects_to_channel(31, 15).
port_connects_to_channel(10, 16).
port_connects_to_channel(12, 17).
port_connects_to_channel(32, 18).
port_connects_to_channel(33, 19).
port_connects_to_channel(43, 20).
port_connects_to_channel(42, 21).
port_connects_to_channel(38, 22).
port_connects_to_channel(39, 22).
port_connects_to_channel(40, 23).
port_connects_to_channel(41, 23).
port_connects_to_channel(43, 24).
port_connects_to_channel(42, 25).

% FACT: inflow_connects_to_channel(port_id, channel_id).
inflow_connects_to_channel(2, 29).
inflow_connects_to_channel(1, 30).
inflow_connects_to_channel(1, 32).
inflow_connects_to_channel(2, 33).
inflow_connects_to_channel(6, 3).
inflow_connects_to_channel(7, 4).
inflow_connects_to_channel(6, 16).
inflow_connects_to_channel(7, 17).

% FACT: outflow_connects_to_channel(port_id, channel_id).
outflow_connects_to_channel(3, 26).
outflow_connects_to_channel(4, 27).
outflow_connects_to_channel(5, 28).
outflow_connects_to_channel(3, 34).
outflow_connects_to_channel(4, 35).
outflow_connects_to_channel(5, 36).
outflow_connects_to_channel(8, 1).
outflow_connects_to_channel(9, 2).
outflow_connects_to_channel(8, 18).
outflow_connects_to_channel(9, 19).
outflow_connects_to_channel(35, 20).
outflow_connects_to_channel(36, 21).
outflow_connects_to_channel(35, 24).
outflow_connects_to_channel(36, 25).

% FACT: uri_variable(uri_variable_id, variable_name, port_id).
uri_variable(1, 'input1_data_file_name', 1).
uri_variable(2, 'localDB_data_file_name', 2).
uri_variable(3, 'log1_data_file_name', 3).
uri_variable(4, 'output2_data_file_name', 4).
uri_variable(5, 'log2_data_file_name', 5).
uri_variable(6, 'localDB_data_file_name', 6).
uri_variable(7, 'input1_data_file_name', 7).
uri_variable(8, 'output1_data_file_name', 8).
uri_variable(9, 'log1_data_file_name', 9).
uri_variable(10, 'localDB_data_file_name', 10).
uri_variable(11, 'input1_data_file_name', 12).
uri_variable(12, 'output1_data_file_name', 32).
uri_variable(13, 'log1_data_file_name', 33).
uri_variable(14, 'output1_data_file_name', 34).
uri_variable(15, 'output2_data_file_name', 35).
uri_variable(16, 'log2_data_file_name', 36).
uri_variable(17, 'output1_data_file_name', 37).
uri_variable(18, 'log2_data_file_name', 42).
uri_variable(19, 'output2_data_file_name', 43).
